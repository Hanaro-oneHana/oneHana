generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Account {
  id            Int           @id @default(autoincrement()) @db.UnsignedInt
  account       String        @db.VarChar(31)
  balance       BigInt        @default(0)
  type          Int           @db.TinyInt
  expire_date   String?       @db.VarChar(31)
  transfer_date String?       @db.VarChar(31)
  payment       BigInt?
  user_id       Int           @db.UnsignedInt

  User          User          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_account_user")
  Transaction   Transaction[]

  @@index([user_id], map: "fk_account_user")
}

model BudgetPlan {
  id                 Int            @id @default(autoincrement()) @db.UnsignedInt
  user_id            Int            @db.UnsignedInt
  partner_service_id Int            @db.UnsignedInt
  partnerservice     PartnerService @relation(fields: [partner_service_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_budget_service")
  user               User           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_budget_user")

  @@index([partner_service_id], map: "fk_budget_service")
  @@index([user_id], map: "fk_budget_user")
}


model DepositInterest {

  id     Int     @id @default(autoincrement()) @db.UnsignedInt
  period Int     @db.TinyInt
  rate   Decimal @db.Decimal(5, 2)
}


model LoanInterest {

  id     Int     @id @default(autoincrement()) @db.UnsignedInt
  period Int     @db.TinyInt
  rate   Decimal @db.Decimal(5, 2)
}

model Partner {
  id                  Int              @id @default(autoincrement()) @db.UnsignedInt
  name                String           @db.VarChar(30)
  partner_category_id Int              @db.UnsignedInt
  phone               String           @db.VarChar(20)
  email               String?          @db.VarChar(30)
  address             String           @db.VarChar(30)
  discount_rate       Decimal          @default(0.00) @db.Decimal(5, 2)
  service_detail      String           @db.Text
  is_active           Boolean          @default(true)
  partnercategory     PartnerCategory  @relation(fields: [partner_category_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_partner_category")
  partnerservice      PartnerService[]

  @@index([partner_category_id], map: "fk_partner_category")
}


model PartnerCalendar {

  id                 Int            @id @default(autoincrement()) @db.UnsignedInt
  user_id            Int            @db.UnsignedInt
  reservation_date   String         @db.VarChar(31)
  partner_service_id Int            @db.UnsignedInt
  partnerservice     PartnerService @relation(fields: [partner_service_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_partnercalender_service")
  user               User           @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_partnercalender_user")

  @@index([partner_service_id], map: "fk_partnercalender_service")
  @@index([user_id], map: "fk_partnercalender_user")
}


model PartnerCategory {

  id      Int       @id @default(autoincrement()) @db.UnsignedInt
  type    String    @db.VarChar(30)
  partner Partner[]
}


model PartnerService {

  id              Int               @id @default(autoincrement()) @db.UnsignedInt
  partner_id      Int               @db.UnsignedInt
  name            String            @db.VarChar(20)
  content         Json


  BudgetPlan      BudgetPlan[]
  PartnerCalendar PartnerCalendar[]
  Partner         Partner           @relation(fields: [partner_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_service_partner")


  @@index([partner_id], map: "fk_service_partner")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model Transaction {
  id               Int     @id @default(autoincrement()) @db.UnsignedInt
  account_id       Int     @db.UnsignedInt
  transaction_date String  @db.VarChar(31)
  amount           BigInt
  balance          BigInt

  Account          Account @relation(fields: [account_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_transaction_account")

  @@index([account_id], map: "fk_transaction_account")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model User {
  id              Int               @id @default(autoincrement()) @db.UnsignedInt
  name            String            @db.VarChar(20)
  password        String            @db.VarChar(255)
  phone           String            @db.VarChar(20)
  email           String            @unique(map: "email") @db.VarChar(31)
  marriage_date   String?           @db.VarChar(31)
  code            String?           @db.VarChar(15)
  mate_code       String?           @db.VarChar(15)
  type            Int               @default(0) @db.TinyInt
  account         Account[]
  Budgetplan      BudgetPlan[]
  partnercalendar PartnerCalendar[]
  usercalendar    UserCalendar[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments

model UserCalendar {

  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  user_id   Int    @db.UnsignedInt
  user_date String @db.VarChar(31)
  type      Int    @db.TinyInt

  User      User   @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_usercalender_user")


  @@index([user_id], map: "fk_usercalender_user")
}
